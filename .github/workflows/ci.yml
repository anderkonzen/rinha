name: CI

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  dependencies:
    runs-on: ubuntu-20.04
    name: Dependencies - Elixir ${{ matrix.elixir }} / OTP ${{ matrix.otp }}
    env:
      MIX_ENV: test
    strategy:
      matrix:
        include:
          - elixir: 1.15.4
            otp: 26.0.2
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Elixir/OTP
        uses: erlef/setup-beam@v1.16.0
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - name: Mix cache
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
          key: |
            mix-${{ runner.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            mix-${{ runner.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-

      - name: Restore PLT cache
        id: plt_cache
        uses: actions/cache/restore@v3
        with:
          path: |
            priv/plts
          key: |
            plt-${{ runner.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            plt-${{ runner.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-

      - name: Install mix dependencies and compile
        run: mix do deps.get, compile --warnings-as-errors --all-warnings

      - name: Unlock unused dependecies
        run: mix deps.unlock --check-unused

      # Create PLTs if no cache was found
      - name: Create PLTs
        if: steps.plt_cache.outputs.cache-hit != 'true'
        run: mix dialyzer --plt

      # By default, the GitHub Cache action will only save the cache if all steps in the job succeed,
      # so we separate the cache restore and save steps in case running dialyzer fails.
      - name: Save PLT cache
        id: plt_cache_save
        uses: actions/cache/save@v3
        if: steps.plt_cache.outputs.cache-hit != 'true'
        with:
          path: |
            priv/plts
          key: |
            plt-${{ runner.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-${{ hashFiles('**/mix.lock') }}

  static-code-analysis:
    needs: dependencies
    runs-on: ubuntu-20.04
    name: Static Code Analysis - Elixir ${{ matrix.elixir }} / OTP ${{ matrix.otp }}
    env:
      MIX_ENV: test
    strategy:
      matrix:
        include:
          - elixir: 1.15.4
            otp: 26.0.2
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Elixir/OTP
        uses: erlef/setup-beam@v1.16.0
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
          key: |
            mix-${{ runner.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            mix-${{ runner.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-

      - name: Restore PLT cache
        id: plt_cache
        uses: actions/cache/restore@v3
        with:
          path: |
            priv/plts
          key: |
            plt-${{ runner.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            plt-${{ runner.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-

      - name: Check formatting
        run: mix format --check-formatted

      - name: Check credo
        run: mix credo --strict

      - name: Check sobelow
        run: mix sobelow -i Config.HTTPS

      - name: Check dialyzer
        run: mix dialyzer --format github

  test:
    services:
      db:
        image: postgres:14
        ports: ['5432:5432']
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    needs: static-code-analysis
    runs-on: ubuntu-20.04
    name: Tests - Elixir ${{ matrix.elixir }} / OTP ${{ matrix.otp }}
    env:
      MIX_ENV: test
    strategy:
      matrix:
        include:
          - elixir: 1.15.4
            otp: 26.0.2
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Elixir/OTP
        uses: erlef/setup-beam@v1.16.0
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
          key: |
            mix-${{ runner.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            mix-${{ runner.os }}-${{ matrix.elixir }}-${{ matrix.otp }}-

      - name: Run tests
        run: mix coveralls.lcov

      - name: Coveralls GitHub Action
        uses: coverallsapp/github-action@v2
        with:
          files: cover/lcov.info
